<?php

namespace Andersen\SportsBettingBundle\Repository;

/**
 * BetRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BetRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param $sportId
     * @return array
     *
     * /sports/{sportId}/bets
     *
     * get bets of sport type
     */
    public function findAllBets($sportId)
    {
        $allBets = $this->getEntityManager()->getRepository("SportsBettingBundle:Bet");
        $query = $allBets->createQueryBuilder('bet')
            ->where('bet.sport > :sport')
            ->setParameter('sport', $sportId)
            ->getQuery();
        return $query->getResult();
    }

    /**
     * @param $sportId
     * @param $gameId
     * @return array
     *
     * /sports/{sportId}/game/{gameId}/bets
     *
     * get bets of gameId and sportId
     */
    public function findSportGameBets($sportId, $gameId)
    {
        $sportGameBets = $this
            ->getEntityManager()
            ->createQueryBuilder()
            ->select('s', 'g', 'b')
            ->from('SportsBettingBundle:Bet', 'b')
            ->leftJoin('b.sport', 's')
            ->leftJoin('b.game', 'g')
            ->where('s.id = :sportId')
            ->andWhere('g.id = :gameId')
            ->setParameter('sportId', $sportId)
            ->setParameter('gameId', $gameId);
        $query = $sportGameBets->getQuery()->getResult();
        return $query;
    }

    public function selectUsersByGameId($gameId)
    {
        $query = $this
            ->getEntityManager()
            ->createQueryBuilder()
            ->select('u', 'b')
            ->from('SportsBettingBundle:Bet', 'b')
            ->leftJoin('b.user', 'u')
            ->where("b.game = :gameId")
            ->setParameter('gameId', $gameId);
        $query = $query->getQuery()->getResult();

        return $query;
    }

    public function selectUserBetsInTeamInGame($userId, $teamWinner, $gameId)
    {
        $query = $this
            ->getEntityManager()
            ->createQueryBuilder()
            ->select('b', 'g', 'u')
            ->from('SportsBettingBundle:Bet', 'b')
            ->leftJoin('b.game', 'g')
            ->leftJoin('b.user', 'u')
            ->where("g.id = :gameId")
            ->andWhere("u.id = :userId");

        if ($teamWinner === null) {
            $query = $query->andWhere("b.team IS NULL");
        } else {
            $query = $query->andWhere("b.team = :teamWinner")
                ->setParameter('teamWinner', $teamWinner);
        }

        $query = $query->setParameter('gameId', $gameId)
            ->setParameter('userId', $userId);

        $query->getParameters();
        $query = $query->getQuery()->getResult();

        return $query;
    }
}
